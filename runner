#!/bin/bash
###############################################################################
#
# PARAMETERS:
# $1 is the ID of the candidate to be evaluated
# $2 is the instance + seed ID
# $3 is the seed
# $4 is the instance name
# The rest ($* after `shift 4') are parameters for running the target
#
# RETURN VALUE:
# This script should print a single numerical value (the value to be minimized).
###############################################################################

CONFIG_ID="$1"
INSTANCE_ID="$2"
SEED="$3"
INSTANCE="$4"
DATASET="$6"

# All other parameters are the candidate parameters to be passed to program
shift 6 || error "Not enough parameters to $0"
CONFIG_PARAMS=$*

STDOUT=output/${DATASET}/c${CONFIG_ID}-${INSTANCE}-${INSTANCE_ID}.stdout
STDERR=output/${DATASET}/c${CONFIG_ID}-${INSTANCE}-${INSTANCE_ID}.stderr

EXE=./${DATASET}/target.py

# In case of error, we print the current time:
error() {
    echo "`TZ=UTC date`: error: $@" >&2
    exit 1
}

$EXE --instance $INSTANCE --config_id $CONFIG_ID ${CONFIG_PARAMS} 1> $STDOUT 2> $STDERR

# Does this file exist?
if [ ! -s "${STDOUT}" ]; then
    # In this case, the file does not exist. Let's exit with a value 
    # different from 0. In this case irace will stop with an error.
    error "${STDOUT}: No such file or directory"
fi

# Ok, the file exist. It contains the whole output written by the target.
# This script should return a single numerical value, the best objective 
# value found by this run of the target. The following line is to extract
# this value from the file containing the target output.
COST=$(tail -1 ${STDOUT})

# Print it!
echo "$COST"

# We are done with our duty. Clean files and exit with 0 (no error).
rm -f "${STDOUT}" "${STDERR}"
rm -f best.* stat.* cmp.*
exit 0
